; ------------------------------------------
; Name:     Firmware builder
; Date:     June 2016
; About:    Flexible and powerful build system for delivering customized firmwares.
; Channel:  Transport: HTTP; Format: application/octet-stream, text/plain
; See also: https://getkotori.org/docs/gallery/firmware.html
; ------------------------------------------
; Description:
;
;         - Listen to HTTP POST requests
;         - Read user-defined variables from the HTTP request body and url segments
;         - Acquire source code from configured git repository
;         - Apply user-defined variables to code base
;         - Run build and respond with firmware in hex or
;           full output of build process in case of errors
;
; Manual:   Please specify the source parameter in uri format.
;
; ------------------------------------------

[mqttkit-1.firmware-from-git]
enable          = false

type            = application
application     = kotori.firmware.service:boot

realm           = mqttkit-1
source          = http:/api/{ADDR_REALM:mqttkit-1}/{ADDR_NETWORK:.*}/{ADDR_GATEWAY:.*}/{ADDR_NODE:.*}/{slot:firmware}.{suffix} [POST]
repository      = https://github.com/hiveeyes/arduino
patch_files     = *.ino, *.pde, *.cpp, *.h, Makefile*

# TODO: Send notification via MQTT
#notify          = mqtt:/mqttkit-1/{address}/firmware

# Espressif SDK and Arduino Core for ESP8266::
#
#   git clone https://github.com/esp8266/Arduino /opt/esp8266-arduino
#   cd /opt/esp8266-arduino/tools
#   ./get.py
#
esp_root        = /opt/esp8266-arduino
